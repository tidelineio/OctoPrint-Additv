name: Create Release

on:
  pull_request:
    types: [closed]
    branches:
      - main
  push:
    branches:
      - main

jobs:
  create_release:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate new version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: minor
          release_branches: main

      - name: Prepare Release
        run: |
          # Create temp directory for release
          mkdir -p release_tmp
          
          # Copy all source files
          cp -r octoprint_additv release_tmp/
          cp setup.py release_tmp/
          cp README.md release_tmp/
          
          # Update version in the release copy
          echo "__version__ = \"${{ steps.tag_version.outputs.new_version }}\"" > release_tmp/octoprint_additv/version.py
          
          # Create zip archive with version number
          cd release_tmp
          zip -r "../OctoPrint-Additv-${{ steps.tag_version.outputs.new_version }}.zip" ./*
          cd ..

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.tag_version.outputs.new_tag }} \
            --title "Release ${{ steps.tag_version.outputs.new_tag }}" \
            --notes "${{ steps.tag_version.outputs.changelog }}" \
            "OctoPrint-Additv-${{ steps.tag_version.outputs.new_version }}.zip"
